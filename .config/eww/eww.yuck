; Windows foldstart
(defwindow bar
           :monitor 0
           :geometry (geometry :x 0
                               :y 0
                               :width "100%"
                               :height "60px"
                               :anchor "bottom center")
           :reserve (struts :distance "60px"
                            :side "bottom")
           :wm-ignore true
           :windowtype "dock"
  (bar :screen 0))
; foldend

; Bar foldstart
(defwidget bar [screen]
  (box :orientation "h"
       :space-evenly false
       :class "bar"
    (box :halign "start"
         :space-evenly false
      (workspaces)
      (player))
    (box :halign "center"
         :space-evenly true
      (window))
    (box :halign "end"
         :spacing 12
         :hexpand true
         :space-evenly false
      (network)
      (backlight)
      (speaker)
      (battery)
      (datetime))))
; foldend

; Variables foldstart
(defvar time-active :initial true)
(defpoll time-poll :interval "10s" "date +%H:%M"
                   :run-while time-selected)
(defpoll date-poll :interval "1h" "date +%d/%m/%Y")
(deflisten workspaces-listen "./modules/workspaces.sh")
(deflisten player-listen :initial '{"show": "no", "content": ""}' "./modules/player.sh")
; TODO: sort this out
(defpoll speaker_poll :interval "999h" "./modules/speaker.sh")
; foldend

; Modules foldstart
; Generic icon module foldstart
(defwidget icon-module [icon ?class ?visible]
  (box :class "${class} icon-module"
       :orientation "h"
       :halign "end"
       :space-evenly false
       :visible {visible ?: true} ; because the argument is optional
    (label :class "icon-module__icon" :text "${icon}")
    (children)))
; foldend

; Polybar-Style modules foldstart
(defwidget workspaces []
  (literal :content workspaces_listen))

(defwidget player []
  (icon-module :class "player" :icon "" :visible {player_listen.show == "yes"}
    (literal :content {player_listen.content})))

(defwidget datetime []
  (icon-module :class "date" :icon ""
    (label :text date_poll)))

(defwidget speaker []
  (icon-module :class "speaker"
               :icon {speaker_poll.icon}
    (eventbox :onscroll `eww update speaker_poll="$(./modules/speaker.sh {})"`
      (button :onclick `eww update speaker_poll="$(./modules/speaker.sh toogle)"`
        (label :text {speaker_poll.content})))))
; foldend

; vim:foldmethod=marker
; vim:foldmarker=foldstart,foldend
